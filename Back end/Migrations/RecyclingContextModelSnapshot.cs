// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recycling.Data;

namespace Recycling.API.Migrations
{
    [DbContext(typeof(RecyclingContext))]
    partial class RecyclingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Recycling.Model.Entities.Fraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HubId");

                    b.Property<bool>("IsClean");

                    b.Property<int>("UserId");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("HubId");

                    b.HasIndex("UserId");

                    b.ToTable("Fraction");
                });

            modelBuilder.Entity("Recycling.Model.Entities.Hub", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CleanPercentage")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0.0);

                    b.Property<string>("Location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("WasteManagementId");

                    b.HasKey("Id");

                    b.HasIndex("WasteManagementId");

                    b.ToTable("Hub");
                });

            modelBuilder.Entity("Recycling.Model.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfRegistration");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Recycling.Model.Entities.UserHub", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("HubId");

                    b.Property<int>("Id");

                    b.HasKey("UserId", "HubId");

                    b.HasIndex("HubId");

                    b.ToTable("UserHub");
                });

            modelBuilder.Entity("Recycling.Model.Entities.WasteManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("WasteManagement");
                });

            modelBuilder.Entity("Recycling.Model.Entities.Fraction", b =>
                {
                    b.HasOne("Recycling.Model.Entities.Hub", "Hub")
                        .WithMany("TotalFractions")
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Recycling.Model.Entities.User", "User")
                        .WithMany("TrashDeliveries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Recycling.Model.Entities.Hub", b =>
                {
                    b.HasOne("Recycling.Model.Entities.WasteManagement", "WasteManagement")
                        .WithMany("Hubs")
                        .HasForeignKey("WasteManagementId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Recycling.Model.Entities.UserHub", b =>
                {
                    b.HasOne("Recycling.Model.Entities.Hub", "Hub")
                        .WithMany("UserHubs")
                        .HasForeignKey("HubId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Recycling.Model.Entities.User", "User")
                        .WithMany("UserHubs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
